name: Builder
on: [push, pull_request]
jobs:
  macos:
    name: macOS
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Build
      run: |
        SCHEMES=$(xcodebuild -list | grep --after-context=-1 '^\s*Schemes:' | tail -n +2 | xargs)
        for SCHEME in ${SCHEMES}; do
          echo "Building scheme ${SCHEME}"
          xcodebuild -configuration Release -scheme ${SCHEME} | xcpretty -f `xcpretty-travis-formatter`
        done
    - name: Run tests
      run: |
        SCHEMES=$(xcodebuild -list | grep --after-context=-1 '^\s*Schemes:' | tail -n +2 | xargs)
        for SCHEME in ${SCHEMES}; do
          echo "Testing scheme ${SCHEME}"
          xcodebuild -configuration Release -scheme ${SCHEME} build-for-testing -skipUnavailableActions | xcpretty -f `xcpretty-travis-formatter`
          xcodebuild -configuration Release -scheme ${SCHEME} test-without-building -skipUnavailableActions | xcpretty -f `xcpretty-travis-formatter`
        done
  macos2:
    name: macOS(SwiftPM)
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Build
      run: swift build -c release
    - name: Run tests
      run: swift test -c release
  ubuntu:
    name: ${{ matrix.image }}
    container: 
      image: docker://swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [xenial, bionic]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Install dependencies
      run: apt-get -q update && apt-get -y install libjavascriptcoregtk-1.0-dev
    - name: Build
      run: swift build -c release
    - name: Run tests
      run: swift test -c release
